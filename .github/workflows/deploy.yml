name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create deployment package
        run: |
          mkdir deploy
          cp build/libs/*.jar deploy/app.jar
          cp docker-compose.yml deploy/
          cp prometheus.yml deploy/
          cp Dockerfile deploy/
          tar -czf deploy.tar.gz deploy/

      - name: Upload to S3 and Deploy
        run: |
          # S3 버킷 생성 (이미 있으면 무시)
          aws s3 mb s3://thinkeep-deploy-$(date +%Y%m%d) 2>/dev/null || true
          
          # 배포 파일 업로드
          BUCKET_NAME=thinkeep-deploy-$(date +%Y%m%d)
          aws s3 cp deploy.tar.gz s3://$BUCKET_NAME/deploy.tar.gz
          
          # EC2에서 배포 실행
          aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "cd /home/ubuntu/thinkeep",
              "sudo docker-compose down || true",
              "BUCKET_NAME=thinkeep-deploy-$(date +%Y%m%d)",
              "aws s3 cp s3://$BUCKET_NAME/deploy.tar.gz . || echo Download failed",
              "tar -xzf deploy.tar.gz 2>/dev/null || echo Extract failed", 
              "cp deploy/* . 2>/dev/null || echo Copy failed",
              "export DB_URL=\"${{ secrets.DB_URL }}\"",
              "export DB_USERNAME=\"${{ secrets.DB_USERNAME }}\"",
              "export DB_PASSWORD=\"${{ secrets.DB_PASSWORD }}\"",
              "export JWT_SECRET=\"${{ secrets.JWT_SECRET }}\"",
              "export OPENAI_KEY=\"${{ secrets.OPENAI_API_KEY }}\"", 
              "export GRAFANA_PASSWORD=\"${{ secrets.GRAFANA_PASSWORD }}\"",
              "sudo docker-compose up -d",
              "sudo docker system prune -f"
            ]' \
            --region ${{ secrets.AWS_REGION }}